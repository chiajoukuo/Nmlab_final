{"ast":null,"code":"var _jsxFileName = \"/home/jason/Desktop/nm_final/Nmlab_final/src/components/ImageUploader.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, FormText, Label, Input } from \"reactstrap\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport '../pages/IG/component/IG_style.css';\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal,\n        //   url: \"\",\n        //   file: null,\n        isUploading: false,\n        isUploaded: false\n      });\n    };\n\n    this.handleChange = (e, newValue) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.handleChangeIndex = index => {\n      this.setState({\n        value: index\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.loader = () => {\n      const _this$state = this.state,\n            isUploading = _this$state.isUploading,\n            isUploaded = _this$state.isUploaded;\n\n      if (isUploading) {\n        // isUploading\n        return React.createElement(\"div\", {\n          className: \"spinner-border text-info\",\n          role: \"status\",\n          style: {\n            marginRight: \"1rem\",\n            verticalAlign: \"bottom \"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Loading...\"));\n      } else if (!isUploading && isUploaded) {\n        // !isUploading && isUploaded\n        return React.createElement(\"img\", {\n          src: \"https://image.flaticon.com/icons/svg/179/179372.svg\",\n          style: {\n            width: \"24px\",\n            margin: \"3px\",\n            marginRight: \"1rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.upload = e => {\n      this.setState({\n        isUploading: true,\n        isUploaded: false\n      }); // e.preventDefault();\n      // let formData = new FormData();\n      // var file = document.querySelector(\"[type=file]\");\n      // formData.append(\"myImage\", file.files[0]);\n      // this.props.uploadImage(formData);\n    };\n\n    this.onSubmit = e => {\n      // e.preventDefault();\n      if (this.state.url !== \"\") {\n        console.log(this.state.url); // const newImage = {\n        //     url: this.state.url\n        // };\n        // Add image via addImage action\n        // this.props.addImage(this.props.diaryID, { image: newImage });\n        // Close modal\n\n        this.toggle();\n      }\n    };\n\n    this.state = {\n      url: 'http://www.freeiconspng.com/uploads/upload-icon-30.png',\n      modal: false,\n      value: 0\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"Post-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Post-image-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Upload your own image.\",\n      src: this.state.url,\n      onClick: this.toggle,\n      className: \"uploader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Upload your own image.\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"URL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(SwipeableViews, {\n      index: this.state.value,\n      onChangeIndex: this.handleChangeIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        padding: 6 * 3,\n        marginTop: \"15px\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Image URL\"), React.createElement(Input, {\n      value: this.state.url,\n      type: \"text\",\n      name: \"url\",\n      id: \"url\",\n      className: \"mb-3\",\n      placeholder: \"please enter Image URL\",\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        padding: 6 * 3,\n        marginTop: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Select An Image File\"), React.createElement(Input, {\n      type: \"file\",\n      name: \"file\",\n      id: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"upload-btn\",\n      style: {\n        float: \"right\",\n        marginTop: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.loader(), React.createElement(Button, {\n      size: \"sm\",\n      onClick: this.upload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Upload\", React.createElement(CloudUploadIcon, {\n      size: \"small\",\n      style: {\n        marginLeft: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))))))), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: \"1rem\"\n      },\n      block: true,\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Add Image\"))));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/home/jason/Desktop/nm_final/Nmlab_final/src/components/ImageUploader.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","FormText","Label","Input","SwipeableViews","AppBar","Tabs","Tab","Typography","CloudUploadIcon","ImageUploader","constructor","props","toggle","setState","modal","state","isUploading","isUploaded","handleChange","e","newValue","value","handleChangeIndex","index","onChange","target","name","loader","marginRight","verticalAlign","width","margin","upload","onSubmit","url","console","log","render","padding","marginTop","alignItems","float","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    FormText,\n    Label,\n    Input\n  } from \"reactstrap\";\n  import SwipeableViews from \"react-swipeable-views\";\n  import AppBar from \"@material-ui/core/AppBar\";\n  import Tabs from \"@material-ui/core/Tabs\";\n  import Tab from \"@material-ui/core/Tab\";\n  import Typography from \"@material-ui/core/Typography\";\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n  import '../pages/IG/component/IG_style.css'\n\nclass ImageUploader extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            url:'http://www.freeiconspng.com/uploads/upload-icon-30.png',\n            modal:false,\n            value:0\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        //   url: \"\",\n        //   file: null,\n            isUploading: false,\n            isUploaded: false\n        });\n    };\n\n    handleChange = (e, newValue) => {\n        this.setState({\n          value: newValue\n        });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({\n            value: index\n        });\n    };\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    loader = () => {\n        const { isUploading, isUploaded } = this.state;\n        if (isUploading) {\n          // isUploading\n          return (\n            <div\n              className=\"spinner-border text-info\"\n              role=\"status\"\n              style={{ marginRight: \"1rem\", verticalAlign: \"bottom \" }}\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          );\n        } else if (!isUploading && isUploaded) {\n          // !isUploading && isUploaded\n          return (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/179/179372.svg\"\n              style={{ width: \"24px\", margin: \"3px\", marginRight: \"1rem\" }}\n            />\n          );\n        } else {\n          return null;\n        }\n    };\n    upload = e => {\n        this.setState({\n            isUploading: true,\n            isUploaded: false\n        });\n        // e.preventDefault();\n        // let formData = new FormData();\n        // var file = document.querySelector(\"[type=file]\");\n        // formData.append(\"myImage\", file.files[0]);\n        // this.props.uploadImage(formData);\n    };\n    onSubmit = e => {\n        // e.preventDefault();\n        if (this.state.url !== \"\") {\n            console.log(this.state.url)\n            // const newImage = {\n            //     url: this.state.url\n            // };\n\n            // Add image via addImage action\n            // this.props.addImage(this.props.diaryID, { image: newImage });\n\n            // Close modal\n            this.toggle();\n        }\n    };\n\n    render(){\n        return(\n            <>\n                <div className=\"Post-image\">\n                    <div className=\"Post-image-bg\">\n                        <img alt=\"Upload your own image.\" src={this.state.url} onClick={this.toggle } className='uploader'/>\n                    </div>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader onClick={this.toggle}>\n                        Upload your own image.\n                    </ModalHeader>\n                    <ModalBody>\n                        <AppBar position=\"static\" color=\"default\">\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"fullWidth\"\n                        >\n                            <Tab label=\"URL\" />\n                            <Tab label=\"Upload\" />\n                        </Tabs>\n                        </AppBar>\n                        <SwipeableViews\n                        index={this.state.value}\n                        onChangeIndex={this.handleChangeIndex}\n                        >\n                            <Typography\n                                component=\"div\"\n                                style={{\n                                padding: 6 * 3,\n                                marginTop: \"15px\",\n                                alignItems: \"center\"\n                                }}\n                            >\n                                <Form>\n                                <FormGroup>\n                                    <Label for=\"url\">Image URL</Label>\n                                    <Input\n                                    value={this.state.url}\n                                    type=\"text\"\n                                    name=\"url\"\n                                    id=\"url\"\n                                    className=\"mb-3\"\n                                    placeholder=\"please enter Image URL\"\n                                    onChange={this.onChange}\n                                    required\n                                    />\n                                </FormGroup>\n                                </Form>\n                            </Typography>\n\n                            <Typography\n                                component=\"div\"\n                                style={{ padding: 6 * 3, marginTop: \"15px\" }}\n                            >\n                                <Form>\n                                <FormGroup>\n                                    <Label for=\"upload\">Select An Image File</Label>\n                                    <Input type=\"file\" name=\"file\" id=\"upload\" />\n                                    <div\n                                    id=\"upload-btn\"\n                                    style={{ float: \"right\", marginTop: \"0px\" }}\n                                    >\n                                    {this.loader()}\n                                    <Button size=\"sm\" onClick={this.upload}>\n                                        Upload\n                                        <CloudUploadIcon\n                                        size=\"small\"\n                                        style={{ marginLeft: \"5px\" }}\n                                        />\n                                    </Button>\n                                    </div>\n                                </FormGroup>\n                                </Form>\n                            </Typography>\n                        </SwipeableViews>\n                        <Button\n                        color=\"dark\"\n                        style={{ marginTop: \"1rem\" }}\n                        block\n                        onClick={this.onSubmit}\n                        >\n                        Add Image\n                        </Button>\n                    </ModalBody>\n                </Modal>\n            </>\n            \n        );\n    }\n}\n\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}